#spring.application.name=fileStorageService
#spring.datasource.url=jdbc:mysql://localhost:3306/e_commerce_db
#spring.datasource.url=jdbc:mysql://eCommerce-db:3307/e_commerce_db
#spring.datasource.username=root
#spring.datasource.password=password
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
#spring.jpa.show-sql=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.sql.init.platform=h2
#spring.jpa.defer-datasource-initialization=true
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:file:/data/demo6

spring.jackson.serialization.fail-on-empty-beans=false
spring.datasource.url=jdbc:mysql://file-storage-db:3306/file_storage
#spring.datasource.url=jdbc:mysql://localhost:3306/file_storage
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update

ratelimit.time-window=60000
ratelimit.limit=100

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

#Must be at least 256 bits
jwt.key=${jwt.key}
storage.path=${storage.path}
tf.upload-dir=${storage.path}
tf.chunk-size=1048576
tf.store-in-chunks=true
tf.file-hash-algorithm=Md5